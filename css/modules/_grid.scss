//
// Module: Grid
// -----------------------------------------------------------------------------


// Rows
// -----------------------------------------------------------------------------

%grid {
  justify-content: space-between;
}

@mixin grid {
  display: flex;
}

.grid {
  @extend %grid;
  @include grid;
}

@each $breakpoint in $breakpoints {
  .grid-#{nth($breakpoint, 1)} {
    @extend %grid;

    @media (min-width: #{nth($breakpoint, 2)}) {
      @include grid;
    }
  }
}


// Cells
// -----------------------------------------------------------------------------

// Basic cell style
%cell {
  padding: 0 ($grid-gutter / 2);
}

// Basic cell for even distribution
.cell {
  @extend %cell;
  flex: 1 1 100%;
}

// Mixin for generated cells
@mixin grid-cell($width, $columns, $generated) {
  // Trim fraction
  $fraction: fraction($width, $columns);
  $width:   nth($fraction, 1);
  $columns: nth($fraction, 2);

  // Search, if already generated. Else generate
  @if not find($generated, $fraction) {
    .cell-#{$width}of#{$columns} {
      @extend %cell;
      flex: $width 1 percentage($width / $columns);
    }
  }
}

// Generate cells
$grid-generated: null;
@each $columns in $grid-columns {
  @for $width from 1 through $columns - 1 {
    @include grid-cell($width, $columns, $grid-generated);
    $grid-generated: append($grid-generated, ($width, $columns));
  }
}


// Alignments
// -----------------------------------------------------------------------------

// Local cell alignments
.cell-top {
  align-self: flex-start;
}

.cell-center {
  align-self: center;
}

.cell-bottom {
  align-self: flex-end;
}

.cell-stretch {
  align-self: stretch;
}

// Global cell alignments per row
.grid-top {
  align-items: flex-start;
}

.grid-center {
  align-items: center;
}

.grid-bottom {
  align-items: flex-end;
}

.grid-baseline {
  align-items: baseline;
}
