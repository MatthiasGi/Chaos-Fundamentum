//
// Buttons
// -----------------------------------------------------------------------------


// Basic mixins
// -----------------------------------------------------------------------------

@mixin button($background, $color: null) {

  // Extract color from list, if necessary
  @if $color == null {
    $color: nth($background, 3);
    $background: nth($background, 2);
  }

  background: $background;
  border-color: darken($background, 10%);
  color: $color;

  &, &.active {
    &:hover,
    &:focus {
      background-color: darken($background, 10%);
    }
  }

  &:active,
  &.active {
    background-color: darken($background, 20%);
  }

  // Reset for anchor element
  @include hover {
    color: $color;
  }

}


// Actual button
// -----------------------------------------------------------------------------

.btn {
  background: transparent;
  border: 1px solid transparent;
  cursor: pointer;
  display: inline-block;
  margin: .25em .1em;
  outline: 0;
  padding: .6em 1em;
  transition: #{$animation-spec};
  transition-property: background-color, border-color;

  // Basic button style
  @include button(#fff, $color-gray-darker);
  @extend %fix-ios-inputs;

  // Generate colored versions
  @each $color in $colors {
    &.btn-#{nth($color, 1)} {
      @include button($color);
    }
  }

  &.btn-invert {
    @include button($color-text, $color-background);
  }

  // Link style
  &.btn-link {
    @extend %link;
    border: none;

    &:focus {
      @extend a:focus;
    }
  }

  // Different button sizes
  @each $size in $button-sizes {
    &.btn-#{nth($size, 1)} {
      font-size: nth($size, 2);
    }
  }

  // Block style button
  &.btn-block {
    display: block;
    width: 100%;
  }
}

// Reset for anchor element
a.btn {
  line-height: normal;

  @include hover {
    text-decoration: none;
  }

  &:not(.btn-link):focus {
    @include outline(transparent);
  }
}


// Button group
// -----------------------------------------------------------------------------

// Basic group
.btn-group {
  @extend .clearfix;

  margin: .25em 0;

  .btn {
    float: left;
    margin: 0;

    &:not(:first-child) {
      border-left: none;
    }
  }

  // Justified button group
  &.btn-group-justified {
    display: flex;

    .btn {
      flex: 1 1 auto;
    }
  }
}

// Toolbars (as in group of groups)
.btn-toolbar .btn-group {
  display: inline-block;

  &:not(:first-child) {
    margin-left: 1em;
  }
}

// Vertical groups
.btn-group-vertical .btn {
  display: block;
  margin: 0;

  &:not(:first-child) {
    border-top: none;
  }
}

// Sizing
@each $size in $button-sizes {
  $size: nth($size, 1);
  .btn-group-#{$size} {
    @extend .btn.btn-#{$size};
  }
}
