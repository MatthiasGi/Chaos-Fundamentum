//
// Module: Grid
// -----------------------------------------------------------------------------


// Actual Grid
// -----------------------------------------------------------------------------

// Basic cell mixin
@mixin grid-cell {
	padding: $grid-gutter / 2;
	box-sizing: border-box;
	flex: none;
	width: 100%;
}

// Flexible cell mixin
@mixin grid-cell-flex($width: auto) {
	@if $width == auto {
		flex: 1;
	} @else {
		// Overwrite 100%-rule of grid-cell
		width: percentage($width / 100) !important;
	}
}

@mixin grid-cell-offset($offset) {
	margin-left: percentage($offset / 100);
}

// Actual grid
.grid {
	
	// Container style
	display: flex;
	flex-flow: row wrap;
	
	// Global alignment
	&.grid-top {
		align-items: flex-start;
	}

	&.grid-center {
		align-items: center;
	}

	&.grid-bottom {
		align-items: flex-end;
	}

	// Individual alignment
	.cell-top {
		align-self: flex-start;
	}

	.cell-center {
		align-self: center;
	}
	
	.cell-bottom {
		align-self: flex-end;
	}
	
	.cell-stretch {
		align-self: stretch;
	}

	// Cell preparations
	@each $size in "xs", "sm", "md", "lg" {
		.cell-#{$size} {
			@include grid-cell;
			@if $size == "xs" {
				@include grid-cell-flex;
			}
		}

		@each $width in $grid-widths {
			.cell-#{$size}-#{$width} {
				@include grid-cell;
				@if $size == "xs" {
					@include grid-cell-flex($width);
				}
			}
		}
	}

	// Cell responsiveness
	@each $size in "sm" $screen-sm, "md" $screen-md, "lg" $screen-lg {
		@media (min-width: #{nth($size, 2)}) {
			
			.cell-#{nth($size, 1)} {
				@include grid-cell-flex;
			}

			@each $width in $grid-widths {
				.cell-#{nth($size, 1)}-#{$width} {
					@include grid-cell-flex($width);
				}

				// Push: No offsets for xs
				.cell-#{nth($size, 1)}-push-#{$width} {
					margin-left: $width * 1%;
				}

				// Pull
				.cell-#{nth($size, 1)}-pull-#{$width} {
					margin-left: -$width * 1%;
				}
			}

		}
	}

}


// Container for fixed layouts
// -----------------------------------------------------------------------------

.container {
	margin: 0 auto;
	padding: 1em;
	
	// Remove extra padding on bigger screens
	@media (min-width: #{$screen-sm}) {
		padding: 0;
	}
	
	// Responsiveness
	@each $size in $screen-sm $screen-sm-container, $screen-md $screen-md-container, $screen-lg $screen-lg-container {
		@media (min-width: #{nth($size, 1)}) {
			& {
				width: #{nth($size, 2)};
			}
		}
	}
}